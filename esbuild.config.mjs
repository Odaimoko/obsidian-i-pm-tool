import esbuild from "esbuild";
import builtins from "builtin-modules";
import {replace} from "esbuild-plugin-replace";
import ifdef from "esbuild-plugin-ifdef";
import {executePostBuildPlugin} from "./ci/postbuildPlugin.mjs";

const banner =
    `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === "production");
const ifdef_define = {
    "process.env.DEVELOPMENT_BUILD": JSON.stringify(!prod),
};
const context = await esbuild.context({
    banner: {
        js: banner,
    },
    define: ifdef_define, // ifdef
    plugins: [
        ifdef(ifdef_define),
        // place `replace` at the end, otherwise it will stop other plugins from being loaded.
        replace({
            "process.env.NODE_ENV": JSON.stringify(prod ? "production" : "development"),
        }),
        executePostBuildPlugin,
    ],
    entryPoints: ["src/main.ts"],
    bundle: true,
    external: [
        "obsidian",
        "electron",
        "@codemirror/autocomplete",
        "@codemirror/collab",
        "@codemirror/commands",
        "@codemirror/language",
        "@codemirror/lint",
        "@codemirror/search",
        "@codemirror/state",
        "@codemirror/view",
        "@lezer/common",
        "@lezer/highlight",
        "@lezer/lr",
        ...builtins],
    format: "cjs",
    target: "es2018",
    logLevel: "info",
    sourcemap: prod ? false : "inline",
    treeShaking: true,
    outfile: "main.js",
});

if (prod) {
    await context.rebuild();
    process.exit(0);
} else {
    console.log("Watching for changes...")
    await context.watch();
}
